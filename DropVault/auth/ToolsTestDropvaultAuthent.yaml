apiVersion: v1
kind: Pod
metadata:
  name: dropvault-tools-auth
  namespace: dropvault
spec:
  containers:
  - name: dropvault-auth
    image: docker.io/dropvault/auth-tool:v1
    env:
    - name: DATABASE_URL
      value: postgres://postgres:postgres@db-auth:5432/postgres?sslmode=disable
    volumeMounts:
    - name: volume-dropvault-auth-migrations
      mountPath: "/tmp/migrations"
    - name: volume-dropvault-auth-cargo
      mountPath: "/tmp/Cargo.toml"
  restartPolicy: Never
  volumes:
  - name: volume-dropvault-auth-migrations
    persistentVolumeClaim:
      claimName: pvc-dropvault-auth-migrations
  - name: volume-dropvault-auth-cargo
    persistentVolumeClaim:
      claimName: pvc-dropvault-auth-cargo

---

kind: PersistentVolume
apiVersion: v1
metadata:
  name: pv-dropvault-auth-migrations
  namespace: dropvault
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 5000Mi
  accessModes:
  - ReadWriteOnce
  hostPath:
    path: "/home/pi/Dropvaultv31/DropVault/auth/migrations"

---

kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: pvc-dropvault-auth-migrations
  namespace: dropvault
spec:
  storageClassName: manual
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 5000Mi

---

kind: PersistentVolume
apiVersion: v1
metadata:
  name: pv-dropvault-auth-cargo
  namespace: dropvault
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 100Mi
  accessModes:
  - ReadWriteOnce
  hostPath:
    path: "/home/pi/Dropvaultv31/DropVault/auth/Cargo.toml"

---

kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: pvc-dropvault-auth-cargo
  namespace: dropvault
spec:
  storageClassName: manual
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
