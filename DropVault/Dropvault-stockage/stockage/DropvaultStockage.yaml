apiVersion: v1
kind: Service
metadata:
  name: db-stock
  namespace: dropvault
spec:
  type: ClusterIP
  ports:
  - port: 5432
    targetPort: 5432
    protocol: TCP
  selector:
    app: db-stock

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: db-stock
  namespace: dropvault
spec:
  replicas: 3
  selector:
    matchLabels:
      app: db-stock
  template:
    metadata:
      labels:
        app: db-stock
    spec:
      containers:
      - name: db-stock
        image: docker.io/postgres:latest
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_PASSWORD
          value: postgres
        volumeMounts:
         - name: volume-dropvault-stock-db
           mountPath: "/var/lib/postgresql/data"
      volumes:
      - name: volume-dropvault-stock-db
        persistentVolumeClaim:
          claimName: pvc-dropvault-stock-db
          
---

apiVersion: v1
kind: Service
metadata:
  name: dropvault-stock
  namespace: dropvault
spec:
  type: NodePort
  ports:
  - port: 8084
    targetPort: 8084
    nodePort: 31000
    protocol: TCP
  selector:
    app: dropvault-stock
    
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: dropvault-stock
  namespace: dropvault
spec:
  replicas: 3
  selector:
    matchLabels:
      app: dropvault-stock
  template:
    metadata:
      labels:
        app: dropvault-stock
    spec:
      containers:
      - name: dropvault-stock
        image: docker.io/dropvault/dropvault-storage-arm:v2.2
        ports:
        - containerPort: 8084
        env:
        - name: DATABASE_URL
          value: postgres://postgres:postgres@db-stock/postgres?sslmode=disable
        - name: DB
          value: "db-stock:5432"
        volumeMounts:
         - name: volume-dropvault-stock-content
           mountPath: "/app/stock"
         - name: volume-dropvault-stock-key
           mountPath: "/app/key"
      restartPolicy: Always
      volumes:
      - name: volume-dropvault-stock-key
        persistentVolumeClaim:
          claimName: pvc-dropvault-stock-key
      - name: volume-dropvault-stock-content
        persistentVolumeClaim:
          claimName: pvc-dropvault-stock-content

---

kind: PersistentVolume
apiVersion: v1
metadata:
  name: pv-dropvault-stock-db
  namespace: dropvault
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 500Mi
  accessModes:
  - ReadWriteMany
  nfs:
    server: 192.168.1.20
    path: "/media/datacluster/pgdata-stock-db"

---

kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: pvc-dropvault-stock-db
  namespace: dropvault
spec:
  storageClassName: manual
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 100Mi

---

kind: PersistentVolume
apiVersion: v1
metadata:
  name: pv-dropvault-stock-content
  namespace: dropvault
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 500Mi
  accessModes:
  - ReadWriteMany
  nfs:
    server: 192.168.1.20
    path: "/media/datacluster/stock-content"

---

kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: pvc-dropvault-stock-content
  namespace: dropvault
spec:
  storageClassName: manual
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 100Mi

---

kind: PersistentVolume
apiVersion: v1
metadata:
  name: pv-dropvault-stock-key
  namespace: dropvault
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 500Mi
  accessModes:
  - ReadWriteMany
  nfs:
    server: 192.168.1.20
    path: "/media/datacluster/stock-key"

---

kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: pvc-dropvault-stock-key
  namespace: dropvault
spec:
  storageClassName: manual
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 100Mi
